// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace RouteService.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Airline
    {
        /// <summary>
        /// Initializes a new instance of the Airline class.
        /// </summary>
        public Airline()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Airline class.
        /// </summary>
        /// <param name="name">Name of the airline.</param>
        /// <param name="alias">Alias of the airline. For example, All Nippon
        /// Airways is commonly known as "ANA".</param>
        /// <param name="active">True if the airline is or has until recently
        /// been operational, otherwise it is defunct.</param>
        public Airline(string name = default(string), string alias = default(string), bool? active = default(bool?))
        {
            Name = name;
            Alias = alias;
            Active = active;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the airline.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets alias of the airline. For example, All Nippon Airways
        /// is commonly known as "ANA".
        /// </summary>
        [JsonProperty(PropertyName = "alias")]
        public string Alias { get; set; }

        /// <summary>
        /// Gets or sets true if the airline is or has until recently been
        /// operational, otherwise it is defunct.
        /// </summary>
        [JsonProperty(PropertyName = "active")]
        public bool? Active { get; set; }

    }
}
